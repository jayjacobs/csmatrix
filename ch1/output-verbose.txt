$ python3 ../matrix/submit.py --verbose The_Field.py 
= Coding the Matrix Homework and Lab Submission
Fetching problems
Importing your stencil file
username: Jay
This assignment has the following parts:
  1) Problem 1.7.1Python Comprehensions: Filtering
  2) Problem 1.7.2Python Comprehensions: Lists of Lists
  3) Problem 1.7.3Python Comprehensions: Function Composition
  4) Problem 1.7.4Summing numbers in a list
  5) Problem 1.7.5Multiplying numbers in a list
  6) Problem 1.7.6Minimum of a list
  7) Problem 1.7.7Concatenation of a List
  8) Problem 1.7.8Union of Sets in a List
  9) Problem 1.7.10Complex Addition Practice
  10) Problem 1.7.12Combining Complex Operations
  11) Problem 1.7.13GF(2) Arithmetic

Which parts do you want to submit? (Ex: 1, 4-7): 1-11
== Submitting "Problem 1.7.1Python Comprehensions: Filtering"
>>> l = [24, 60, 120, 130]
>>> print(test_format((myFilter(l, 1))))
None
>>> print(test_format((myFilter(l, 400))))
None
>>> print(test_format((myFilter(l, 8))))
None

Incorrect answer for Problem 1.7.1Python Comprehensions: Filtering

== Submitting "Problem 1.7.2Python Comprehensions: Lists of Lists"
>>> print(test_format((my_lists([0, 0, 0]))))
None
>>> print(test_format((my_lists([1, 2, 3]))))
None
>>> print(test_format((my_lists([4, 2, 0]))))
None

Incorrect answer for Problem 1.7.2Python Comprehensions: Lists of Lists

== Submitting "Problem 1.7.3Python Comprehensions: Function Composition"
>>> f = {0:'a', 1:'b'}
>>> g = {'a':'apple', 'b':'banana'}
>>> print(test_format((myFunctionComposition(f, g))))
None
>>> f = {1:'q', 3:'w', 0:'e', 2:'r'}
>>> g = {'w':'ace', 'e':'vet', 'q':'pot', 'r':'bat'}
>>> print(test_format((myFunctionComposition(f, g))))
None

Incorrect answer for Problem 1.7.3Python Comprehensions: Function Composition

== Submitting "Problem 1.7.4Summing numbers in a list"
>>> print(test_format((mySum([]))))
None
>>> print(test_format((mySum([1,2,3,4,5]))))
None
>>> print(test_format((mySum([8164, 1964, 4619, 2432, 8105, 4519, 1645, 6169, 507, 2196, 9946, 2330, 2854, 9261, 7432, 2915, 8787, 7486, 7585, 861, 4171, 9860, 2870, 7983, 7736, 8966, 1879, 6451, 3958, 4089, 5528, 1399, 4230, 9332, 4931, 8135, 869, 7672, 9161, 6570, 4478, 6140, 3857, 9427, 8348, 6882, 4183, 3417, 8160, 2365]))))
None
>>> print(test_format((mySum([4500, 8117, 1907, 9899, 5719, 584, 2363, 547, 9576, 4465, 724, 5931, 7480, 3992, 5250, 8625, 5245, 8895, 7832, 5528, 2591, 3608, 4563, 2683, 5633, 4322, 2050, 7836, 9372, 1264, 1209, 8529, 6291, 3167, 7427, 1271, 6868, 5574, 5561, 8523, 5788, 3968, 2337, 9012, 5293, 8911, 5187, 5587, 7294, 7452]))))
None

Incorrect answer for Problem 1.7.4Summing numbers in a list

== Submitting "Problem 1.7.5Multiplying numbers in a list"
>>> print(test_format((myProduct([]))))
None
>>> print(test_format((myProduct([1,2,3,4,5]))))
None
>>> print(test_format((myProduct([5310, 3433, 5531, 7696, 8319, 8765, 956, 9875, 1664, 6175, 7757, 1129, 1008, 4766, 6138, 8200, 6641, 3677, 2129, 9127, 3265, 6157, 5326, 3765, 4576, 5672, 7474, 6576, 2749, 4750, 218, 2908, 6595, 7732, 2923, 1328, 3440, 6544, 420, 8323, 3754, 7268, 6492, 921, 256, 6537, 6649, 9590, 1918, 9452]))))
None
>>> print(test_format((myProduct([6870, 3697, 9664, 6568, 6626, 6358, 4001, 9836, 7573, 103, 6069, 435, 3302, 5744, 6014, 5891, 7474, 6569, 5921, 4403, 5787, 5497, 1765, 6661, 3811, 3618, 9742, 4886, 3353, 9392, 9065, 1861, 2556, 2470, 8072, 1670, 2046, 2261, 6080, 7201, 7578, 35, 8178, 5455, 4439, 6005, 843, 2752, 3259, 8945]))))
None

Incorrect answer for Problem 1.7.5Multiplying numbers in a list

== Submitting "Problem 1.7.6Minimum of a list"
>>> print(test_format((myMin([5,2,4,7,4]))))
None
>>> print(test_format((myMin([4390, 8557, 9868, 5303, 2153, 4409, 9245, 1431, 1865, 9451, 4448, 8864, 3051, 4930, 951, 1173, 4534, 6540, 3080, 4583, 14, 6039, 2296, 4361, 1796, 2359, 2750, 3357, 1401, 6568, 4570, 9643, 854, 1844, 8994, 3468, 7654, 3192, 2956, 3346, 95, 875, 1671, 1116, 1611, 7554, 8299, 7631, 6104, 2502]))))
None
>>> print(test_format((myMin([899, 8048, 429, 7731, 7465, 5454, 1923, 4509, 1441, 5916, 2155, 9467, 4499, 2303, 8331, 9658, 2650, 9222, 9593, 6473, 6611, 9157, 2219, 4596, 1669, 7200, 5329, 9282, 7523, 7457, 8643, 3078, 1189, 1818, 1151, 8058, 6410, 8307, 5229, 7533, 3836, 2357, 2014, 2658, 6964, 3294, 6519, 9242, 1240, 2632]))))
None
>>> print(test_format((myMin([-100,-200,-300]))))
None

Incorrect answer for Problem 1.7.6Minimum of a list

== Submitting "Problem 1.7.7Concatenation of a List"
TEST ERROR: AttributeError: 'NoneType' object has no attribute 'encode'
TEST ERROR: AttributeError: 'NoneType' object has no attribute 'encode'
>>> print(test_format((myConcat([]))))
None
>>> import hashlib
>>> print(test_format((hashlib.md5(myConcat(['rolnmcaipe', 'bopsjvkhxz', 'alhtcriyub', 'lxmunfkpcz', 'vpsikhtflg', 'qrwnhtfuxg', 'wvofecpxbn', 'tkjawldvqm', 'blznrdkjcf', 'dpromgblct', 'gswrnxivda', 'gyjbaldcxu', 'ldercanzgi', 'mnflwaedop', 'tehilkboup', 'abspyehcoi', 'amqhtulexg', 'qczasxmuyf', 'qxvzjudgko', 'ylucajwrfk', 'tivlnksdob', 'nbqmcelfzw', 'zngmbkxwsi', 'xhurdszbwe', 'nwigkzphyu', 'loufhrsnav', 'vrexwiuhyf', 'yuanbxehrw', 'dovbhitsju', 'lgxukpfayw', 'lawnbyrcit', 'nsxloghdzi', 'wgbyajloiv', 'pargnymzfc', 'kuhspewzjb', 'mpvayrhels', 'klxudpihny', 'sneapfohwu', 'bwclzgvtmh', 'wuceqtlrio', 'xbgezaiwvk', 'fklyhzjotx', 'bwzalcvhof', 'eapyjoidgt', 'ruxvimzcyw', 'rkgezstlum', 'ubwkoznhgl', 'cpoijlmwes', 'eqfhkgmxrc', 'abcfrwmztx', 'npesjzhdia', 'opvhrzgten', 'uixemtayfc', 'nkvjqtbszd', 'hjerkaxmqd', 'qvmnscgjxa', 'jrhmafnyvk', 'routmqeyki', 'ubqkjmvocn', 'yaptwcenqj', 'mdegpuslyk', 'kqhezlpvsn', 'hbfcdepjxa', 'jsdwoxgcqe', 'vgzophscmn', 'kvhniafpjc', 'mobtvykenh', 'opsilmznex', 'sfwtvyxuml', 'yuminqrhgo', 'lcyfsrjduz', 'vjxnhkabcu', 'uwxkaejotd', 'bfcjopiulm', 'ekwrtphvon', 'jktfryduvc', 'nbqvldpofi', 'pbhjrivazs', 'gzfkxjqvlw', 'mzylopudsh', 'uhjdkovtme', 'ebxtlmjpck', 'yezmlarvps', 'clwbdmoagp', 'epnwzxhjgv', 'tfaveismjw', 'xmqusyfvbe', 'uiywrzqgep', 'lwutsaypiq', 'bzaxwumvjh', 'zqlgjshbir', 'wfistgdope', 'azwkvxympf', 'xteidsjgwn', 'jswauobpzd', 'fpstnmxugy', 'qsgnuydjxm', 'nlcosrpubz', 'erknqbjmud', 'ziduqlwabg']).encode()).hexdigest())))
AttributeError: 'NoneType' object has no attribute 'encode'
>>> print(test_format((myConcat(['he', 'll', 'ow','or','ld']))))
None
>>> print(test_format((hashlib.md5(myConcat(['jyrwnfaekq', 'yqeljvspin', 'ysxrcpdvmz', 'mpgvfordix', 'fhzjxcbgvr', 'jleipntzvx', 'qyvlhxcotu', 'whaiptsfuc', 'sfoaybnqch', 'hxodqwuyec', 'ibnuyvrzqg', 'mrepshvtyc', 'gdeszmhoqa', 'qjmsnczduv', 'hyrwpdeluc', 'fhdoprilze', 'gvprbcejuy', 'upwzqlmsyh', 'orvgyfkcie', 'brxycavszh', 'rldhqazvfx', 'nrfsydpoht', 'gotmuhdkvp', 'qtfcjugrdv', 'qpfwuelbzx', 'lremuckqfw', 'oguwenbdav', 'gcsjnopyqr', 'pmtoeuigys', 'pesahbcwdy', 'cfiybgkpho', 'zaqwbkuyvj', 'dtcbwrmqji', 'mjygopznus', 'edbajtrwhs', 'kvywatjgir', 'mwcsrailtj', 'soxqcynvmr', 'ixavjybuge', 'ajlfsbcimw', 'wifnkyepgt', 'lkfnxqgmta', 'ojgcuxnylb', 'btejgdrplu', 'cnjfmbsxer', 'niaupcyevz', 'dyqhnbipaf', 'qvtycnwrop', 'xcdrmpefzl', 'mxqynravzf', 'rymuxbctow', 'owrlhzgmds', 'cxozkwhais', 'axnvwfgidc', 'obkgftselm', 'cbazgqewix', 'vsxqwkbump', 'rhmnyvkxua', 'kqtyjbaugp', 'jozgmlqbyk', 'yegqluozrx', 'nxleihzcyu', 'ldhyvntiwc', 'okrhpxdwgv', 'xusrzmildy', 'uxrhifplem', 'crpxhdyksz', 'frkdpqstvb', 'hxnjatyvgf', 'zgjabroyxd', 'dfthcrnugo', 'hrxindytgm', 'riwzgchytx', 'naysmkzvld', 'rfvsiaqxoz', 'tfrouxzhbv', 'zeqydinkrs', 'gcpblyiofk', 'jnsbqvogpi', 'idzvrweqnj', 'arpfgwzqyi', 'vasghowike', 'zxtighumkj', 'pokqudvnlj', 'gmqljakfrv', 'frqblatkzn', 'fxmewlgzcr', 'qjmsfixodn', 'sdwtjhkrao', 'crytljgfiu', 'hrvcoxyafb', 'nxbpitedsj', 'qrasxmlguw', 'gwfsqpvmtx', 'rowdsjemgf', 'hbcatpgzrv', 'srbcdiohfn', 'inqwcbulrg', 'eovdhwtlcb', 'aynmdreols']).encode()).hexdigest())))
AttributeError: 'NoneType' object has no attribute 'encode'

Incorrect answer for Problem 1.7.7Concatenation of a List

== Submitting "Problem 1.7.8Union of Sets in a List"
>>> print(test_format((myUnion([{1,2,3},{2,3,4}]))))
None
>>> print(test_format((myUnion([set(),{1,2}]))))
None
>>> print(test_format((myUnion([]))))
None
>>> print(test_format((myUnion([{31, 61, 27, 88, 98, 22, 16, 86, 99, 35}, {42, 85, 78, 4, 10, 26, 76, 91, 63, 2}, {76, 5, 5, 81, 69, 0, 27, 64, 74, 56}, {20, 12, 23, 39, 90, 68, 15, 55, 41, 57}, {64, 43, 15, 96, 12, 99, 37, 53, 75, 99}, {9, 75, 9, 91, 26, 7, 79, 28, 46, 50}, {21, 13, 1, 56, 92, 47, 9, 15, 77, 79}, {16, 68, 41, 99, 57, 90, 10, 68, 49, 91}, {85, 44, 54, 12, 97, 64, 63, 81, 37, 56}, {36, 5, 76, 13, 63, 36, 63, 67, 62, 27}]))))
None

Incorrect answer for Problem 1.7.8Union of Sets in a List

== Submitting "Problem 1.7.10Complex Addition Practice, Part 1"
>>> print(test_format((complex_addition_a)))
Ellipsis

Incorrect answer for Problem 1.7.10Complex Addition Practice, Part 1

== Submitting "Problem 1.7.10Complex Addition Practice, Part 2"
>>> print(test_format((complex_addition_b)))
Ellipsis

Incorrect answer for Problem 1.7.10Complex Addition Practice, Part 2

== Submitting "Problem 1.7.10Complex Addition Practice, Part 3"
>>> print(test_format((complex_addition_c)))
Ellipsis

Incorrect answer for Problem 1.7.10Complex Addition Practice, Part 3

== Submitting "Problem 1.7.10Complex Addition Practice, Part 4"
>>> print(test_format((complex_addition_d)))
Ellipsis

Incorrect answer for Problem 1.7.10Complex Addition Practice, Part 4

== Submitting "Problem 1.7.12Combining Complex Operations"
>>> a = 1+4j
>>> b = -2+1j
>>> L = [2j, 1+6j, 2+9j, 3j]
>>> print(test_format((transform(a, b, L))))
None
>>> a = -4-1j
>>> b = 12+3j
>>> L = [1-1j, 5+9j, 3j, 2]
>>> print(test_format((transform(a, b, L))))
None

Incorrect answer for Problem 1.7.12Combining Complex Operations

== Submitting "Problem 1.7.13GF(2) Arithmetic, Part 1"
>>> print(test_format((GF2_sum_1)))
Ellipsis

Incorrect answer for Problem 1.7.13GF(2) Arithmetic, Part 1

== Submitting "Problem 1.7.13GF(2) Arithmetic, Part 2"
>>> print(test_format((GF2_sum_2)))
Ellipsis

Incorrect answer for Problem 1.7.13GF(2) Arithmetic, Part 2

== Submitting "Problem 1.7.13GF(2) Arithmetic, Part 3"
>>> print(test_format((GF2_sum_3)))
Ellipsis

Incorrect answer for Problem 1.7.13GF(2) Arithmetic, Part 3

